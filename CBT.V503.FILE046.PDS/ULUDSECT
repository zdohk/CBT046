         MACRO
         ULUDSECT &NAM=ULUDSECT
&NAM     DSECT
* ------------------------------------------------------------------- *
*    ULUDSECT - PASS INFORMATION FROM A ULUT TABLE ENTRY              *
*                                                                     *
*    Author   - Sam Golob                                             *
*                                                                     *
*    Version  - 2.0.0                                                 *
*                                                                     *
*    Current Length - 88 bytes                                        *
*                                                                     *
*    Description:                                                     *
*                                                                     *
*        The idea of this DSECT is to provide an area to pass         *
*        information from a UCB Lookup Table entry (ULUE) to a        *
*        calling program, one entry at a time.                        *
*                                                                     *
*        The information requested from each ULUT entry, is what      *
*        you would probably require during a typical UCB scan.        *
*                                                                     *
*        There are also a few register save areas in here.            *
*                                                                     *
*        The reason for this arrangement, is to be able to            *
*        substitute the ULUT lookup for a UCBSCAN macro execution     *
*        in an Assembler program.  UCBSCAN returns information        *
*        about one UCB at a time, and we want to be able to do        *
*        the same thing, using the ULUT method instead.               *
*                                                                     *
*        The difference between this method and the UCBSCAN method    *
*        is that information about REAL UCB's can be returned this    *
*        way, without the caller having to be APF-authorized.         *
*                                                                     *
*        If you are just looking at the UCB and not trying to         *
*        change anything in it, it seems that this method is          *
*        quite harmless to use.                                       *
*                                                                     *
*    Attribution:                                                     *
*                                                                     *
*        This is an undocumented interface that was unearthed for     *
*        the general public by Gilbert Saint-flour, and we are        *
*        publicizing this discovery to perpetuate his memory.         *
*                                                                     *
*    System Dependencies:                                             *
*                                                                     *
*        The user of this interface must be aware that if IBM         *
*        changes the layout of the ULUT by creating a new "ULUT       *
*        type", then the programming interface must be adjusted       *
*        for the new ULUT type. (At present writing, there are        *
*        three ULUT types.  Type 3, starting with PTF UA90741, is     *
*        located in 64-bit storage.  It is pointed to by a new        *
*        location in the IOVT, a doubleword at +1B8 (decimal 440)     *
*        off the beginning of the IOVT.  The previous ULUT types,     *
*        Type 1 and Type 2, were pointed to by a fullword address     *
*        at location +8 off the IOVT.                                 *
*                                                                     *
*        If IOVT+X'8' (for a fullword) is zero, then IOVT+X'1B8'      *
*        (for a doubleword) points to the real ULUT (Type 3 or        *
*        higher).  This depends on PTF level (for z/OS 1.13           *
*        of z/OS 2.1) or on system level (for z/OS 2.2 and more).     *
*                                                                     *
*    ULUT Types:                                                      *
*                                                                     *
*        The ULUT interface to UCB scanning is not a documented       *
*        IBM interface.  Therefore IBM (of course) reserves the       *
*        right to change it at its own discretion.  It has changed    *
*        twice, since ESA 5.  This was at the z/OS 1.7 level.         *
*                                                                     *
*        A new change, to ULUT Type 2, was made at the z/OS 1.7       *
*        level.  ULUT Type 3, starting at the z/OS 2.2 level, has     *
*        been moved to 64-bit storage and is pointed to by a          *
*        doubleword address at +1B8 off the IOVT.  It must be         *
*        addressed in 64-bit mode (SAM64).                            *
*                                                                     *
*        It is up to the user to keep track of any changes to the     *
*        ULUT.  Access to the ULUT is provided by the following       *
*        set of instructions (to be executed in 31-bit mode):         *
*                                                                     *
*          L     R3,16                  CVT                           *
*          L     R3,X'7C'(,R3)          CVTIXAVL - IOCOM              *
*          L     R3,X'D0'(,R3)          IOVT                          *
*          L     R4,8(,R3)              UCB Lookup Table (ULUT)       *
*          LR    R3,R4                  Point both regs to ULUT       *
*          CLC   =C'ULUT',0(R3)         Eyecatcher there?             *
*          BNE   EXIT                   Nope. It ain't it. Out.       *
*                                                                     *
*        This set of instructions is only valid through ULUT          *
*        Type 2 (before PTF UA90741).  To include ULUT Type 3         *
*        as well, you will need the following code:                   *
*                                                                     *
*   GETULUT  DS    0H                                                 *
*            L     R2,16                     CVT                      *
*            USING CVTMAP,R2                                          *
*            MVC   OSLVLSW6,CVTOSLV6         Copy off CVTOSLV6 byte   *
*            DROP  R2                                                 *
*            L     R3,X'7C'(,R2)             CVTIXAVL                 *
*            L     R3,X'D0'(,R3)             IOVT                     *
*            L     R4,8(,R3)                 Check IOVTUL31           *
*            LTR   R4,R4                     Zero?                    *
*            BZ    GETULUN2                  Yes. Type 2 or 1.        *
*            OI    OSLVLSW6,X'40'            No. Indicate 64-bit ULUT *
*            LLGTR R3,R3                     Clear 33 hi-order bits   *
*            LLGTR R4,R4                      of                      *
*            LLGTR R9,R9                       registers              *
*            LLGTR R10,R10                      for running in        *
*            LLGTR R12,R12                       64-bit mode.         *
*            LG    R4,X'1B8'(,R3)            Get dwd addr of ULUT.    *
*            SAM64                           Go to 64-bit mode        *
*            LGR   R3,R4                     Copy register.           *
*            B     GETULUN3                  Skip old 31-bit stuff.   *
*   GETULUN2 DS    0H                                                 *
*            L     R4,8(,R3)                 Old ULUT addr off IOVT   *
*            LR    R3,R4                     Copy register.           *
*   GETULUN3 DS    0H                                                 *
*            TM    OSLVLSW6,X'40'            64-bit ULUT?             *
*            BZ    GETULUN4                  No. Skip 64-bit instrs.  *
*            LLGTR Rx,Rx            Rx, Ry are base registers, etc.   *
*            LLGTR Ry,Ry            Rx, Ry are base registers, etc.   *
*   GETULUN4 DS    0H                                                 *
*            CLC   =C'ULUT',0(R3)            Eyecatcher present?      *
*            BNE   EXIT                      No. Get out.             *
*                                                                     *
*        A binary number at ULUT+4 indicates the ULUT type.           *
*        There have currently been three ULUT types, Type X'01'       *
*        and Type X'02', as well as the new Type X'03' which resides  *
*        in 64-bit storage.  The pointers to the beginning of the     *
*        actual table entries, and the addresses of other pointers    *
*        differ in their location according to ULUT type.  Thus       *
*        any program looking at the ULUT must first refer to the      *
*        "ULUT type" field, and then get all the other information    *
*        accordingly.                                                 *
*                                                                     *
*        The description of the ULUT table entries themselves,        *
*        seems to be identical for all ULUT types thus far.           *
*        For ULUT table entries, the entries are 12 bytes long.       *
*        The first halfword is the hexadecimal four digit device      *
*        address.  The last 4 bytes, at entry+8, is the UCB address.  *
*        Each ULUT table entry also contains a halfword counter,      *
*        at entry+4, starting with X'0002', and which appears to be   *
*        incremented by 1, with each successive table entry.          *
*                                                                     *
*        However, whenever there is a switch of device type in the    *
*        ULUT table, the counter field is zero for the last entry     *
*        representing each given device type.                         *
*                                                                     *
*        The way we find the end of the table, is to get the total    *
*        number of table entries from a field in the ULUT control     *
*        block, get to the first entry, and count through all the     *
*        entries until we get to the last one.                        *
*                                                                     *
*    Requirements:                                                    *
*                                                                     *
*        A calling program will refer to the ULUDSECT data area       *
*        multiple times.  The number of times will usually reflect    *
*        the total number of UCB's defined in the ULUT table.  The    *
*        calling program must GETMAIN storage for this work area,     *
*        and initialize it to zeros at the beginning.  It must NOT    *
*        be initialized while the scan is running, because this       *
*        DSECT is keeping track of which ULUT table entry (i.e.       *
*        which UCB) the program is currently looking at.              *
*                                                                     *
*    Notes:                                                           *
*                                                                     *
*        While the calling program has a given ULUT table entry,      *
*        and its associated UCB, in its sights, it is expected        *
*        that all the required information be extracted from that     *
*        UCB and passed to the work area described by this DSECT.     *
*                                                                     *
*    Residence:                                                       *
*                                                                     *
*        The storage pointed to by this DSECT can reside below        *
*        the 16M line (in 24-bit storage), but the calling program    *
*        must execute in 31-bit mode, because the real UCB info       *
*        may reside above the 16M line, and the ULUT itself is        *
*        usually located above the 16M line.                          *
*                                                                     *
*    Return Codes:                                                    *
*                                                                     *
*        Each referral to this DSECT should return a code of 0,       *
*        except when the table has been exhausted, at which time      *
*        the return code should be 4.  This is to copy the action     *
*        of the UCBSCAN macro, so it is easier to insert a            *
*        routine using this DSECT, into an existing program.          *
*                                                                     *
*    Date:  December 10, 2012                                         *
*                                                                     *
*    Revision:    2.0.0                                               *
*                                                                     *
*    Change History:                                                  *
*                                                                     *
*      2.0.0 - 2015/01/26 - Change for doubleword addressing in       *
*                           the ULUT.  Older ULUT types use the       *
*                           first word of the doubleword save areas.  *
*                                                                     *
* ------------------------------------------------------------------- *
         DS    0D            Align to doubleword for GETMAIN
ULUDULUT DS    D             Address of ULUT in this system
ULUDCURR DS    D             Current ULUT table entry address
ULUDNEXT DS    D             Next ULUT table entry address
ULUDTOTC DS    F             Total count of ULUT entries
ULUDRUNC DS    F             Realtime descending count of ULUT entries
*                             (initialized to ULUDTOTC at beginning)
ULUDDEVA DS    H             Device address of current table entry
ULUDCNTR DS    H             Counter in ULUT of current table entry
*                             This is one higher than the table entry
*                             count, and is incremented by one with
*                             each successive table entry.  However,
*                             this field is sometimes zero when there
*                             is going to be a switch of device types.
ULUDUCBA DS    F             UCB address of current table entry
ULUDCEXT DS    F             Address of this UCB's common extension
ULUDDEVT DS    F             UCB device type (4 bytes)
ULUDONLF DS    X             UCB + 3 (device online has X'80' set)
ULUDTYPE DS    X             ULUT TYPE for this table
ULUDSLV6 DS    X             Copy of CVTOSLV6 flag byte in the CVT.
*                             X'40' is used as a switch to show 64-bit.
ULUDRSV1 DS    X             RESERVED
ULUDSVR0 DS    F             Save area for R0 - fullword
ULUDSVR1 DS    F             Save area for R1 - fullword
ULUDSVUR DS    F             Save USING register for workarea
ULUDSVW1 DS    D             Save first work register  - doubleword
ULUDSVW2 DS    D             Save second work register - doubleword
ULUDSVBR DS    F             Save BCT register - fullword
         DS    0D            Align for GETMAIN
ULUDLENG EQU   *-ULUDSECT
         MEND
